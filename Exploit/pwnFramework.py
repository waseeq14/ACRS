import os
import subprocess
from pwn import *


class ExploitFramework:
    def __init__(self, binary_path, source_code):
        self.binary_path = binary_path
        self.source_code = source_code
        self.staticAnalysis = {}

    def readFile(self, file):
        if not os.path.isfile(file):
            print(f"Error: {file} does not exist or is not a valid file.")
            return None
        try:
            with open(file, "r") as file:
                content = file.read()
            return content
        except Exception as e:
            print(f"Error reading file {file}: {e}")
            return None

    def run_command(self, command):
        try:
            result = subprocess.check_output(command, shell=True, text=True, stderr=subprocess.STDOUT)
            return result.strip()
        except subprocess.CalledProcessError as e:
            print(e)
            return None

    def perform_static_analysis(self):
        self.staticAnalysis["fileMeta"] = self.run_command(f"file {self.binary_path}")
        self.staticAnalysis["checksec"] = self.run_command(f"checksec {self.binary_path}")

