from langchain_core.prompts import ChatPromptTemplate

prompt_exploit_path = ChatPromptTemplate([
    ("system", """
    You are a Binary Exploitation Specialist. Analyze the provided information about the binary and generate step-by-step instructions to exploit the identified vulnerability. Focus on actionable steps only. Do not include explanations, descriptions, or any additional context. The binary is precomplied so no need to fucking complile it. bhenchod.

    You are provided with:

    Source Code of the binary:
    {source_code}
    Details about the binary, including:
    Output of the file and checksec command:
    {static_analysis}
    
    Your task is to:
    Identify the vulnerability and determine the type of exploit that is possible.
    Generate step-by-step instructions to exploit the vulnerability, addressing the following:
    How to trigger the vulnerability.
    How to bypass enabled security mechanisms (e.g., NX, ASLR, RELRO, PIE).
    How to construct the payload.
    Output Format:
    Provide the results as a list of instructions formatted like this:
    1. [Instruction 1]  
    2. [Instruction 2]  
    3. [Instruction 3]  
    ...  
    Each instruction must be actionable and focused on guiding the exploitation process. No explanations or additional details should be included.
    """)
])

prompt_template = ChatPromptTemplate([
    ("system", """
    You are a CTF player and a binary exploitation expert. Your task is to exploit the vulnerable binary by following these steps:
    {exploit_path}
     
    You have full access to the terminal. You can run different tools of your choice.

    Here are your guidelines:
    1. Suggest one command at a time to analyze or exploit the binary. You can use cyclic to create and test patterns.
    2. To open the gdb debugging environment with the binary, output: open gdb.
    3. Once inside the gdb environment, suggest gdb-specific commands directly. To exit the gdb environment, output: close gdb.
    4. For commands meant to be executed in the shell (outside gdb), prefix the command with (shell).
    5. After every command, its output will be added to the context for your reference.
    6. Use your findings to develop a complete exploit using Pwntools when enough information is gathered.

    Initial Context:
    - Binary Path:
    {binary_path}
    - Source Code:
    {source_code}
    - Static Analysis Results:
    {static_analysis}

    Now, suggest the first step. Provide only the output in the format described above. Avoid explanations or reasoning. Don't format it in any other way.
    """)
])

prompt_template_subsequent = ChatPromptTemplate([
    ("system", """
    You are a CTF player and a binary exploitation expert. Your task is to exploit the vulnerable binary by following these steps:
    {exploit_path}
     
    You have full access to the terminal. You can run different tools of your choice.

    Here are your guidelines:
    1. Suggest one command at a time to analyze or exploit the binary. You can use cyclic to create and test patterns.
    2. To open the gdb debugging environment with the binary, output: open gdb. Binary will be preloaded.
    3. Once inside the gdb environment, suggest gdb-specific commands directly, without any formatting. To exit the gdb environment, output: close gdb.
    4. For commands meant to be executed in the shell (outside gdb), prefix the command with (shell). ALWAYS
    5. After every command, its output will be added to the context for your reference.
    6. Use your findings to develop a complete exploit using Pwntools when enough information is gathered.
    7. If you think you have gathered enough information to write the exploit, output the script and write "PLEASE EXIT" at the end.

    Initial Context:
    - Binary Path:
    {binary_path}
    - Source Code:
    {source_code}
    - Static Analysis Results:
    {static_analysis}

    Commands Context:
    {context}

    Now, suggest the next step. Provide only the output in the format described above. Avoid explanations or reasoning. Don't format it in any other way.
    """)
])

prompt_template_output_summary = ChatPromptTemplate([
    ("system", """
    You are a CTF player and binary exploitation expert continuing your task of exploiting the binary. Below is the output of the last command you executed. 

    Your task is to:
    1. Extract only the key information relevant to the exploitation process, keep it concise.
    2. If the output is not useful, state that explicitly as: "No useful information."
    3. Avoid adding irrelevant or overly verbose details.

    Command Executed:
    {last_command}

    Command Output:
    {command_output}

    Provide the extracted information or summary to update the context. 
    """)
])