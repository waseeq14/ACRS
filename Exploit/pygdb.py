import pexpect

class GdbShell:
    def __init__(self, binary_path):
        self.binary_path = binary_path
        self.shell = None

    def start_shell(self):
        self.shell = pexpect.spawn(f'gdb ./{self.binary_path}')
        self.shell.expect(r'\(gdb\) ')
        print(self.shell.before.decode())

    def execute_command(self, command):
        self.shell.sendline(command)
        self.shell.expect(r'\(gdb\) ')
        return self.shell.before.decode()
    
    def stop_shell(self):
        if self.shell:
            self.shell.sendline('exit')
            self.shell.close()


if __name__ == '__main__':
    shell = GdbShell('vuln')
    shell.start_shell()
    print(shell.execute_command('cyclic 100'))
    shell.stop_shell()
