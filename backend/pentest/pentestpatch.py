import os
from langchain_openai import ChatOpenAI

# Initialize LLM (adjust model/config as needed)
llm = ChatOpenAI(model_name="gpt-4o", temperature=0)

def read_md_file(md_path):
    if not os.path.isfile(md_path):
        print(f"[-] File not found: {md_path}")
        return None

    try:
        with open(md_path, "r", encoding="utf-8") as f:
            return f.read()
    except Exception as e:
        print(f"[!] Failed to read file: {e}")
        return None

def ask_patch_suggestion(exploit_text):
    prompt = f"""
You are a cybersecurity expert tasked with patching known privledge escaaltion vulnerabilities in Linux code or systems.

Below is a potential exploit path for a vulnerability. Your job is to:

1. Identify the vulnerability type.
2. Describe the cause of the vulnerability.
3. Suggest a specific patch or mitigation that developers or sysadmins can apply.
4. Provide technical details in your patch (such as code changes, configuration updates, etc.)

Exploit Path:
{exploit_text}

Respond ONLY with the patch suggestion and technical reasoning. Avoid generic advice.
Answer in this Format
 - **Vulnerability Name**: name the vulnerability as in the exploit path file\n\n
 - **Patch**: Suggest how it can be patched or mitigated.\n\n
 ' **Affects**: Explain the affects of applying this patch\n\‚Äù
"""
    print("[~] Asking LLM for patch suggestion...")
    response = llm(prompt)
    return response.content

def main():
    md_path = "exploit_path.md"

    content = read_md_file(md_path)
    if not content:
        return

    patch = ask_patch_suggestion(content)
    print("\n[+] Suggested Patch:\n")
    print(patch)

if __name__ == "__main__":
    main()
